<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lecturer Dashboard</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        footer {
            background-color: #131f2b;
            padding: 10px;
            text-align: center;
            width: 100%;
            color: white;
            font-family: Arial, Helvetica, sans-serif;
        }

        .sidebar {
            height: 100vh;
            background-color: #131f2b;
        }

        body {
            box-sizing: border-box;
            margin: 0;
        }
    </style>
</head>

<body>
    <!-- Student Modal -->
    <div class="modal fade" id="studentModal" tabindex="-1" aria-labelledby="studentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="studentModalLabel">Students in <span id="courseName"></span></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Matric Number</th>
                                <th>Department</th>
                            </tr>
                        </thead>
                        <tbody id="studentModalBody">
                            <!-- Student list will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar collapse" style="padding:0px; margin:0px">
                <div class="position-sticky">
                    <div class="d-flex justify-content-between align-items-center mb-4"
                        style="border-bottom: .5px solid rgb(155, 149, 149); padding-bottom: 1rem; padding-top: .3rem;">
                        <img src="/images/unical-logo.png" alt="School Logo" class="img-fluid" style="max-width:4rem;">
                        <small class="text-white bold ms-3" style="padding-right: -2rem;">UNIVERSITY OF CALABAR</small>
                    </div>
                    <ul class="nav flex-column">
                        <li class="nav-item d-flex justify-content-between box-shadow"
                            style="border-bottom: .5px solid rgb(155, 149, 149); padding-bottom: 1rem;">
                            <a class="nav-link active text-white" href="#" id="courseListLink">
                                <i class="fas fa-book me-2"></i>
                                Courses
                            </a>
                        </li>
                        <li class="nav-item d-flex justify-content-between"
                            style="border-bottom: .5px solid rgb(155, 149, 149); padding-bottom: 1rem;">
                            <a class="nav-link text-white" href="#" id="startVirtualClassLink">
                                <i class="fas fa-video me-2"></i>
                                Start Virtual Class
                            </a>
                        </li>
                        <li class="nav-item d-flex justify-content-between"
                            style="border-bottom: .5px solid rgb(155, 149, 149); padding-bottom: 1rem;">
                            <a class="nav-link text-white" href="#" id="uploadsLink">
                                <i class="fas fa-upload me-2"></i>
                                Upload Lecture Resources
                            </a>
                        </li>
                        <li class="nav-item d-flex justify-content-between"
                        style="border-bottom: .5px solid #9b9595; padding-bottom: 1rem;">
                        <a class="nav-link text-white" href="#" id="viewAssignmentsLink">
                            <i class="fas fa-upload me-2"></i>
                            Students assignments
                        </a>
                    </li>
                        <li class="nav-item d-flex"
                            style="padding-bottom: 1rem; margin-top: 2rem; justify-content: center;">
                            <button class="btn btn-secondary" type="button" onclick="logout()">Logout</button>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div id="alertPlaceholder"></div>
                <div
                    class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">Welcome, <span id="adminName">
                            <%= lecturer.fullName %>
                        </span></h1>
                </div>

                <!-- Course List Section -->
                <div id="courseListSection">
                    <h2>Courses</h2>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Course</th>
                                <th>Course Code</th>
                                <th>Department</th>
                                <th>Faculty</th>
                                <th>Number of Students</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="courseListBody">
                            <!-- Course list will be populated here -->
                        </tbody>
                    </table>
                </div>

                <!-- Start Virtual Class Section -->
                <div id="startVirtualClassSection" class="d-none" style="position: absolute;left: 50%; top: 40%;">
                    <h3>Start a Virtual Class</h3>
                    <div class="d-grid gap-2 col-6 mx-auto">
                        <button class="btn btn-primary" type="button" onclick="startVirtualClass()">Start Virtual
                            Class</button>
                    </div>
                </div>

                <!-- Uploads Section -->
                <div id="uploadsSection" class="d-none">
                    <h2>Uploaded Videos</h2>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>File Name</th>
                                <th>Upload Date</th>
                                <th>Size</th>
                                <th>Type</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="uploadsListBody">
                            <!-- Uploaded videos list will be populated here -->
                        </tbody>
                    </table>

                    <div class="mt-3">
                        <label for="courseSelect" class="form-label">Select Course:</label>
                        <select id="courseSelect" class="form-select" required>
                            <!-- Populate course options dynamically -->
                        </select>

                        <label for="departmentSelect" class="form-label mt-3">Select Department:</label>
                        <select id="departmentSelect" class="form-select" required>
                            <!-- Populate department options dynamically -->
                        </select>
                        <br />
                        <button class="btn btn-primary" onclick="openFileUpload()">Upload New Resource</button>
                        <input type="file" id="fileUpload" style="display: none;" accept="video/*"
                            onchange="uploadFile()">
                    </div>
                </div>

                <div id="viewAssignmentsSection" class="d-none">
                    <h2>Student Assignments</h2>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Student Name</th>
                                <th>File Name</th>
                                <th>Course</th>
                                <th>Upload Date</th>
                                <th>Size</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="assignmentListBody">
                            <!-- Assignment list will be populated here -->
                        </tbody>
                    </table>
                </div>
            </main>

            <footer class="text-center">
                <p>Developed by <strong>EKPOR JOHN NKANU.</strong> This app facilitates low-bandwidth, real-time virtual
                    classroom sessions. Â© 2024.</p>
            </footer>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        async function logout() {
            try {
                const response = await fetch('/api/logout', { method: 'POST' });
                const data = await response.json();
                if (data.success) {
                    window.location.href = '/lecturer/login';
                } else {
                    console.error('Logout failed:', data.message);
                }
            } catch (error) {
                console.error('Error during logout:', error);
            }
        }

        function startVirtualClass() {
            window.location.href = '/lecturer/virtual-class'; // Adjust as per your route
        }
        document.getElementById('startVirtualClassLink').addEventListener('click', function (e) {
            e.preventDefault();
            showSection('startVirtualClassSection');
        });
        document.getElementById('courseListLink').addEventListener('click', function (e) {
            e.preventDefault();
            showSection('courseListSection');
            loadCourses();
        });
        document.getElementById('uploadsLink').addEventListener('click', function (e) {
            e.preventDefault();
            showSection('uploadsSection');
            loadUploads();
        });
        // Add this to your existing event listeners
        document.getElementById('viewAssignmentsLink').addEventListener('click', function (e) {
            e.preventDefault();
            showSection('viewAssignmentsSection');
            loadStudentAssignments();
        });
        function showSection(sectionId) {
            document.querySelectorAll('main > div').forEach(div => div.classList.add('d-none'));
            document.getElementById(sectionId).classList.remove('d-none');
        }

        function loadCourses() {
            axios.get('/api/courses')
                .then(function (response) {
                    const courseListBody = document.getElementById('courseListBody');
                    const courseSelect = document.getElementById('courseSelect');
                    const department = document.getElementById('departmentSelect')
                    courseSelect.innerHTML = '';
                    department.innerHTML = '';
                    courseListBody.innerHTML = '';
                    response.data.courses.forEach(course => {
                        const row = `
                    <tr>
                        <td>${course.courses}</td>
                        <td>${course.courseCode}</td>
                        <td>${course.department}</td>
                        <td>${course.faculty}</td>
                        <td>${course.students.length}</td>
                        <td>
                            <button class="btn btn-sm btn-primary" onclick="viewStudents('${course._id}', '${course.courses}')">View</button>
                        </td>
                    </tr>
                `;
                        const courze = `
                 <option value=${course._id}>${course.courses}</option>`;
                        const departmentz = `
                 <option value=${course._id}>${course.department}</option>`;
                        courseSelect.innerHTML += courze;
                        department.innerHTML += departmentz;
                        courseListBody.innerHTML += row;
                    });
                })
                .catch(function (error) {
                    console.error('Error loading courses:', error);
                    alert('Failed to load courses. Please try again.');
                });
        }

        function viewStudents(courseId, courseName) {
            document.getElementById('courseName').textContent = courseName;
            axios.get(`/api/courses/${courseId}/students`)
                .then(function (response) {
                    const studentModalBody = document.getElementById('studentModalBody');
                    studentModalBody.innerHTML = '';
                    response.data.students.forEach(student => {
                        const row = `
                    <tr>
                        <td>${student.name}</td>
                        <td>${student.matricNumber}</td>
                        <td>${student.department}</td>
                    </tr>
                `;
                        studentModalBody.innerHTML += row;
                    });
                    new bootstrap.Modal(document.getElementById('studentModal')).show();
                })
                .catch(function (error) {
                    console.error('Error loading students:', error);
                    alert('Failed to load students. Please try again.');
                });
        }


        function loadUploads() {
            axios.get('/api/uploadVideosorAudio')
                .then(function (response) {
                    const uploadsListBody = document.getElementById('uploadsListBody');
                    uploadsListBody.innerHTML = '';
                    response.data.uploads.forEach(upload => {
                        const row = `
                    <tr>
                        <td>${upload.fileName}</td>
                        <td>${new Date(upload.uploadDate).toLocaleString()}</td>
                        <td>${formatFileSize(upload.size)}</td>
                        <td>${upload.contentType}</td>
                        <td>
                            <a href="${upload.downloadURL}" class="btn btn-sm btn-primary" target="_blank">Download</a>
                        </td>
                        <td><button class="btn btn-danger btn-sm" onclick="deleteUpload('${upload._id}')">Delete</button></td>
                    </tr>
                `;
                        uploadsListBody.innerHTML += row;
                    });
                })
                .catch(function (error) {
                    console.error('Error loading uploads:', error);
                    alert('Failed to load uploads. Please try again.');
                });
        }

        function openFileUpload() {
            document.getElementById('fileUpload').click();
        }

        function uploadFile() {
            const fileInput = document.getElementById('fileUpload');
            const file = fileInput.files[0];
            const courseSelect = document.getElementById('courseSelect');
            const departmentSelect = document.getElementById('departmentSelect');
            if (!file || !courseSelect.value || !departmentSelect.value) {
                alert('Please select a file, course, and department before uploading.');
                return;
            }

            const formData = new FormData();
            formData.append('filename', file);
            formData.append('courseId', courseSelect.value);
            formData.append('departmentId', departmentSelect.value);

            axios.post('/api/uploadVideosorAudio', formData, {
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            })
                .then(function (response) {
                    alert('File uploaded successfully');
                    loadUploads();
                })
                .catch(function (error) {
                    console.error('Error uploading file:', error);
                    alert('Failed to upload file. Please try again.');
                });

        }
        // Add these functions to your existing JavaScript
        function loadStudentAssignments() {
            axios.get('/api/lecturerGetSubmittedDoc')
                .then(function (response) {
                    const assignmentListBody = document.getElementById('assignmentListBody');
                    assignmentListBody.innerHTML = '';
                    response.data.submissions.forEach(submission => {
                        const row = `
                    <tr>
                        <td>${submission.studentName}</td>
                        <td>${submission.fileName}</td>
                        <td>${submission.courseName}</td>
                        <td>${new Date(submission.uploadDate).toLocaleString()}</td>
                        <td>${formatFileSize(submission.size)}</td>
                        <td>
                            <a href="${submission.downloadURL}" class="btn btn-sm btn-primary" target="_blank">View</a>
                        </td>
                    </tr>
                `;
                        assignmentListBody.innerHTML += row;
                    });
                })
                .catch(function (error) {
                    console.error('Error loading student assignments:', error);
                    alert('Failed to load student assignments. Please try again.');
                });
        }
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
        async function deleteUpload(uploadId) {
            if (!confirm('Are you sure you want to delete this upload?')) {
                return;
            }
            try {
                const response = await axios.delete(`/api/uploadVideosorAudio/${uploadId}`);
                if (response.data.message) {
                    loadUploads();
                    alert('Upload deleted successfully.');
                } else {
                    alert('Failed to delete upload: ' + response.data.message);
                }
            } catch (error) {
                console.error('Error deleting upload:', error);
                alert('Failed to delete upload.');
            }
        }
        // Initial load
        showSection('courseListSection');
        loadCourses();
    </script>
</body>

</html>